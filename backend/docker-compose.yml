version: "3"

networks:
  app-tier:
    driver: bridge
  db-tier:
    driver: bridge
  grafana-tier:
    driver: bridge
  elastic:
    external:
      name: elastic

services:
  gunicorn-backend:
    restart: always
    container_name: gunicorn-backend
    build: .
    environment:
      - Django_secret_key=${Django_secret_key}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL}
      - IS_LOCAL=${IS_LOCAL}
      - aws_access_key_id=${aws_access_key_id}
      - aws_secret_access_key=${aws_secret_access_key}
    volumes:
      - ./:/code
      - /var/jenkins_home/workspace:/var/jenkins_home/workspace
    networks:
      - elastic
      - app-tier
      - db-tier
    expose:
      - 8000
    depends_on:
      - database
    privileged: true

  nginx-backend:
    restart: always
    container_name: nginx-backend
    build:
      context: ./nginx
      dockerfile: ./Dockerfile
    volumes:
      - /var/jenkins_home/workspace/logs:/var/backend-logs
      - ./static/:/static/
    ports:
      - "80:80"
      - "5001:80"
      - "443:443"
    networks:
      - app-tier
    depends_on:
      - gunicorn-backend
    environment:
      - NGINX_HOST=0.0.0.0
      - NGINX_PORT=80

  database:
    image: "postgres"
    user: root
    environment:
      - PGDATA=/var/lib/postgresql/data/django/
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST_AUTH_METHOD=trust
    networks:
      - db-tier
    volumes:
      - /var/jenkins_home/workspace/data/db:/var/lib/postgresql/data/django/
    expose:
      - 5432

  prometheus:
    restart: always
    container_name: prometheus
    image: prom/prometheus:latest
    user: root
    # labels:
    #   - "com.centurylinklabs.watchtower.enable=true"
    volumes:
      - ./prometheus/:/etc/prometheus/
      - /var/jenkins_home/workspace/prometheus/data:/prometheus
    networks:
      - app-tier
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    ports:
      - "9090:9090"
    links:
      - cadvisor:cadvisor
      # - alertmanager:alertmanager
    depends_on:
      - cadvisor

  grafana:
    restart: always
    container_name: grafana
    image: grafana/grafana
    user: root
    # labels:
    #   - "com.centurylinklabs.watchtower.enable=true"
    volumes:
      - /var/jenkins_home/workspace/grafana/:/var/lib/grafana
    networks:
      - app-tier
      - grafana-tier
    ports:
      - 3000:3000

  cadvisor:
    restart: always
    image: google/cadvisor:latest
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /var/cgroup:/cgroup:ro
    ports:
      - 8080:8080
    networks:
      - app-tier
    # command:
    #   - --allow_dynamic_housekeeping=true
    #   - --housekeeping_interval=5m
    #   - --global_housekeeping_interval=2m
    #   - --disable_metrics=percpu,sched,tcp,udp,advtcp,disk,network
    #   - --docker_only=true
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
    privileged: true

  node-exporter:
    restart: always
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    networks:
      - app-tier
    deploy:
      mode: global

  # alertmanager:
  #   image: prom/alertmanager
  #   ports:
  #     - 9093:9093
  #   volumes:
  #     - ./alertmanager/:/etc/alertmanager/
  #   networks:
  #     - app-tier
  #   restart: always
  #   command:
  #     - "--config.file=/etc/alertmanager/config.yml"
  #     - "--storage.path=/alertmanager"
